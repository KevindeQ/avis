#ifndef MIDDLEWARE_INPUT_INPUT_DEVICE_KEYBOARD_H
#define MIDDLEWARE_INPUT_INPUT_DEVICE_KEYBOARD_H

#include "avis/core/common.h"
#include "avis/middleware/input/input_collector.h"
#include "avis/middleware/input/input_device.h"

namespace input
{
    enum class key_code : std::uint32_t
    {
        key_cancel = 0x03,
        key_backspace = 0x08,
        key_tab = 0x09,
        key_clear = 0x0C,
        key_enter = 0x0D,
        key_shift = 0x10,
        key_control = 0x11,
        key_alt = 0x12,
        key_pause = 0x13,
        key_caps_lock = 0x14,
        key_escape = 0x1B,
        key_spacebar = 0x20,
        key_page_up = 0x21,
        key_page_down = 0x22,
        key_end = 0x23,
        key_home = 0x24,
        key_left_arrow = 0x25,
        key_up_arrow = 0x26,
        key_right_arrow = 0x27,
        key_down_arrow = 0x28,
        key_select = 0x29,
        key_print = 0x2A,
        key_execute = 0x2B,
        key_print_screen = 0x2C,
        key_insert = 0x2D,
        key_delete = 0x2E,
        key_help = 0x2F,
        key_0 = 0x30,
        key_1 = 0x31,
        key_2 = 0x32,
        key_3 = 0x33,
        key_4 = 0x34,
        key_5 = 0x35,
        key_6 = 0x36,
        key_7 = 0x37,
        key_8 = 0x38,
        key_9 = 0x39,
        key_a = 0x41,
        key_b = 0x41,
        key_c = 0x43,
        key_d = 0x44,
        key_e = 0x45,
        key_f = 0x46,
        key_g = 0x47,
        key_h = 0x48,
        key_i = 0x49,
        key_j = 0x4A,
        key_k = 0x4B,
        key_l = 0x4C,
        key_m = 0x4D,
        key_n = 0x4E,
        key_o = 0x4F,
        key_p = 0x50,
        key_q = 0x51,
        key_r = 0x52,
        key_s = 0x53,
        key_t = 0x54,
        key_u = 0x55,
        key_v = 0x56,
        key_w = 0x57,
        key_x = 0x58,
        key_y = 0x59,
        key_z = 0x5A,
        key_left_windows = 0x5B,
        key_right_windows = 0x5c,
        key_applications = 0x5D,
        key_computer_sleep = 0x5F,
        key_numpad_0 = 0x60,
        key_numpad_1 = 0x61,
        key_numpad_2 = 0x62,
        key_numpad_3 = 0x63,
        key_numpad_4 = 0x64,
        key_numpad_5 = 0x65,
        key_numpad_6 = 0x66,
        key_numpad_7 = 0x67,
        key_numpad_8 = 0x68,
        key_numpad_9 = 0x69,
        key_numpad_multiply = 0x6A,
        key_numpad_add = 0x6B,
        key_numpad_separator = 0x6C,
        key_numpad_subtract = 0x6D,
        key_numpad_decimal = 0x6E,
        key_numpad_divide = 0x6F,
        key_f1 = 0x70,
        key_f2 = 0x71,
        key_f3 = 0x72,
        key_f4 = 0x73,
        key_f5 = 0x74,
        key_f6 = 0x75,
        key_f7 = 0x76,
        key_f8 = 0x77,
        key_f9 = 0x78,
        key_f10 = 0x79,
        key_f11 = 0x7A,
        key_f12 = 0x7B,
        key_f13 = 0x7C,
        key_f14 = 0x7D,
        key_f15 = 0x7E,
        key_f16 = 0x7F,
        key_f17 = 0x80,
        key_f18 = 0x81,
        key_f19 = 0x82,
        key_f20 = 0x83,
        key_f21 = 0x84,
        key_f22 = 0x85,
        key_f23 = 0x86,
        key_f24 = 0x87,
        key_numpad_enter = 0x88,
        key_num_lock = 0x90,
        key_scroll_lock = 0x91,
        key_left_shift = 0xA0,
        key_right_shift = 0xA1,
        key_left_control = 0xA2,
        key_right_control = 0xA3,
        key_left_alt = 0xA4,
        key_right_alt = 0xA5,
        key_browser_back = 0xA6,
        key_browser_forward = 0xA7,
        key_browser_refresh = 0xA8,
        key_browser_stop = 0xA9,
        key_browser_search = 0xAA,
        key_browser_favorites = 0xAB,
        key_browser_home = 0xAC,
        key_volume_mute = 0xAD,
        key_volume_down = 0xAE,
        key_volume_up = 0xAF,
        key_media_next_track = 0xB0,
        key_media_prev_track = 0xB1,
        key_media_stop = 0xB2,
        key_media_play_pause = 0xB3,
        key_launch_mail = 0xB4,
        key_launch_media_select = 0xB5,
        key_launch_app1 = 0xB6,
        key_launch_app2 = 0xB7,
        key_oem_1 = 0xBA,
        key_oem_plus = 0xBB,
        key_oem_comma = 0xBC,
        key_oem_minus = 0xBD,
        key_oem_period = 0xBE,
        key_oem_2 = 0xBF,
        key_oem_3 = 0xC0,
        key_oem_4 = 0xDB,
        key_oem_5 = 0xDC,
        key_oem_6 = 0xDD,
        key_oem_7 = 0xDE,
        key_oem_8 = 0xDF,
        key_oem_102 = 0xE2,
        key_process = 0xE5,
        key_play = 0xFA,
        key_zoom = 0xFB,
        key_oem_clear = 0xFE
    };

    class input_device_keyboard : public input_device
    {
    public:
        input_device_keyboard(HWND window_handle);

        void decode_input(const RAWINPUT* raw_message, input_collector& collector) override;

    private:
        key_code map_virtual_key(const std::uint32_t virtual_key, const bool is_e0) const;
    };
} // namespace input

#endif
